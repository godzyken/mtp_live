def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

buildscript {
    repositories {
        maven { url 'https://plugins.gradle.org/m2/'}
    }
    dependencies {
        classpath 'gradle.plugin.com.onesignal:onesignal-gradle-plugin:0.12.8'
    }
}
apply plugin: 'com.onesignal.androidsdk.onesignal-gradle-plugin'
apply plugin: 'kotlin-kapt'

repositories {
    maven { url 'https://maven.google.com' }
}

android {
    compileSdkVersion 30

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.godzy.mtp_live"
        minSdkVersion 30
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
        manifestPlaceholders = [
                onesignal_app_id: '1:1087417008239:android:a748d281ab0d91cde20d9a',
                // Project number pulled from dashboard, local value is ignored.
                onesignal_google_project_number: 'REMOTE'
        ]
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            multiDexEnabled true
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            firebaseCrashlytics {
                nativeSymbolUploadEnabled true
                strippedNativeLibsDir "build/ndklibs/obj"
                unstrippedNativeLibsDir "build/ndklibs/libs"
            }
        }
    }
    buildToolsVersion '30.0.2'
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'com.google:google:5'
    def preference_version = "1.1.1"
    def appcompat_version = "1.2.0"


    implementation "androidx.appcompat:appcompat:1.3.0-alpha01"
    // For loading and tinting drawables on older versions of the platform
    implementation "androidx.appcompat:appcompat-resources:1.3.0-alpha01"
    // Java language implementation
    implementation "androidx.preference:preference:$preference_version"
    // Kotlin
    implementation "androidx.preference:preference-ktx:${preference_version}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlin_version}"

    // Room components
    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    kapt "androidx.room:room-compiler:${rootProject.roomVersion}"
    implementation "androidx.room:room-ktx:${rootProject.roomVersion}"
    androidTestImplementation "androidx.room:room-testing:${rootProject.roomVersion}"

// Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:${rootProject.archLifecycleVersion}"
    kapt "androidx.lifecycle:compiler:$rootProject.archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${rootProject.archLifecycleVersion}"

// Kotlin components
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:${rootProject.coroutines}"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:${rootProject.coroutines}"

// Material design
    implementation "com.google.android.material:material:${rootProject.materialVersion}"

// Testing
    testImplementation 'junit:junit:4.13'
    androidTestImplementation "androidx.arch.core:core-testing:$rootProject.coreTestingVersion"
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation fileTree(dir: 'libs', include: '*.jar')
    implementation 'com.google.dagger:hilt-android:2.28.3-alpha'
    kapt 'com.google.dagger:hilt-android-compiler:2.28.3-alpha'
}

project.ext {
    set('FlutterFire', [
            FirebaseSDKVersion: '21.1.0'
    ])
}

apply plugin: 'com.google.gms.google-services'
